name: Build & commit AI Watch data

on:
  schedule:
    - cron: "0 * * * *"   # varje hel timme (UTC)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm i rss-parser googleapis

      # 1) Demo-logg om USE_DEMO_LOGS=true
      # 2) Annars hämta via SFTP (SSH_* secrets krävs)
      - name: Prepare access logs (demo or SFTP)
        env:
          USE_DEMO_LOGS: ${{ secrets.USE_DEMO_LOGS }}
          SSH_HOST:       ${{ secrets.SSH_HOST }}
          SSH_USER:       ${{ secrets.SSH_USER }}
          SSH_PORT:       ${{ secrets.SSH_PORT }}       # valfri, default 22
          SSH_PASSWORD:   ${{ secrets.SSH_PASSWORD }}   # valfri fallback
        run: |
          set -e
          mkdir -p logs

          # --- Demo ---
          if [ "${USE_DEMO_LOGS,,}" = "true" ]; then
            echo "Using demo access.log"
            printf '%s\n' \
              '127.0.0.1 - - [21/Aug/2025:10:13:11 +0000] "GET / HTTP/1.1" 200 123 "-" "GPTBot (https://openai.com/gptbot)"' \
              '127.0.0.1 - - [21/Aug/2025:10:14:55 +0000] "GET /poker HTTP/1.1" 200 456 "-" "PerplexityBot/1.0 (+https://www.perplexity.ai/bot)"' \
              '127.0.0.1 - - [21/Aug/2025:10:15:22 +0000] "GET /robots.txt HTTP/1.1" 200 78 "-" "Mozilla/5.0 (Linux; Google-Extended)"' \
              > logs/access.log
            echo "LOG_PATH=$PWD/logs/access.log" >> $GITHUB_ENV
            exit 0
          fi

          # --- SFTP ---
          if [ -n "$SSH_HOST" ] && [ -n "$SSH_USER" ] && [ -n "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            PORT="${SSH_PORT:-22}"

            # Skriv privata nyckeln till fil
            printf '%s' '${{ secrets.SSH_PRIVATE_KEY }}' > key
            chmod 600 key

            echo "SFTP (key) listing /home/$SSH_USER/logs on $SSH_HOST:$PORT"
            # Bygg batchfil för sftp
            printf '%s\n' \
              "lcd logs" \
              "cd /home/$SSH_USER/logs" \
              "ls" \
              "mget *-ssl_log" \
              "mget *.gz" \
              "bye" > sftp_batch.txt

            # Försök med key-auth
            set +e
            sftp -i key -P "$PORT" -o StrictHostKeyChecking=no -b sftp_batch.txt "$SSH_USER@$SSH_HOST"
            KEY_STATUS=$?
            set -e
            echo "SFTP with key exit code: $KEY_STATUS"

            # Fallback: lösenord om satt
            if [ $KEY_STATUS -ne 0 ] && [ -n "$SSH_PASSWORD" ]; then
              echo "Trying SFTP with password fallback"
              sudo apt-get update -y >/dev/null 2>&1
              sudo apt-get install -y sshpass >/dev/null 2>&1
              set +e
              sshpass -p "$SSH_PASSWORD" sftp -P "$PORT" -o StrictHostKeyChecking=no -b sftp_batch.txt "$SSH_USER@$SSH_HOST"
              PASS_STATUS=$?
              set -e
              echo "SFTP with password exit code: $PASS_STATUS"
            fi

            # Slå ihop allt till en access.log
            : > logs/access.log
            for f in logs/*-ssl_log; do [ -f "$f" ] && cat "$f" >> logs/access.log; done
            for f in logs/*.gz; do [ -f "$f" ] && gunzip -c "$f" >> logs/access.log; done

            if [ -s logs/access.log ]; then
              echo "LOG_PATH=$PWD/logs/access.log" >> $GITHUB_ENV
              echo "access.log ready ($(wc -l < logs/access.log) rows)"
            else
              echo "No log data found via SFTP — bots section will be empty."
            fi
          else
            echo "No demo flag and no SSH_* secrets — skipping logs."
          fi

      - name: Generate data.json
        env:
          BRAND_TERMS:       ${{ secrets.BRAND_TERMS }}
          ALERT_FEEDS:       ${{ secrets.ALERT_FEEDS }}
          GSC_CLIENT_ID:     ${{ secrets.GSC_CLIENT_ID }}
          GSC_CLIENT_SECRET: ${{ secrets.GSC_CLIENT_SECRET }}
          GSC_REFRESH_TOKEN: ${{ secrets.GSC_REFRESH_TOKEN }}
          GSC_PROPERTY:      ${{ secrets.GSC_PROPERTY }}
          LOG_PATH:          ${{ env.LOG_PATH }}   # sätts endast om logg hittades
          DEMO:              ${{ secrets.DEMO }}   # valfritt demo-läge i scriptet
        run: node scripts/update_data.mjs

      - name: Commit data.json
        run: |
          if ! git diff --quiet -- data.json; then
            git config user.name "ai-watch-bot"
            git config user.email "actions@users.noreply.github.com"
            git add data.json
            git commit -m "Update data.json [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi
